// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Or8Way(in=address[0..7], out=lowerbits);
    Or8Way(in=address[5..12], out=upperbits);
    Not(in=lowerbits, out=nlowerbits);
    Not(in=upperbits, out=nupperbits);
    And(a=nlowerbits, b=nupperbits, out=iszero12);
    And(a=address[13], b=address[14], out=isone1314);
    And(a=iszero12, b=isone1314, out=iskeyboard);
    Not(in=iskeyboard, out=notkeyboard);

    And(a=address[14], b=notkeyboard, out=isscreen);
    Not(in=isscreen, out=notscreen);
    And(a=isscreen, b=load, out=loadScreen);
    And(a=notscreen, b=notkeyboard, out=ismem);
    And(a=load, b=ismem, out=loadMem);

    RAM16K(in=in, load=loadMem, address=address[0..13], out=outMem);
    Screen(in=in, load=loadScreen, address=address[0..12], out=outScreen);
    Keyboard(out=key);

    Mux16(a=outMem, b=outScreen, sel=isscreen, out=memOrScreen);
    Mux16(a=memOrScreen, b=key, sel=iskeyboard, out=out);
}
